name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip openjdk-11-jdk git zip unzip
        
    - name: Install buildozer
      run: pip install buildozer cython
        
    - name: Block automatic build-tools 36.1.0 installation
      run: |
        # Crear licencias primero
        mkdir -p $ANDROID_SDK_ROOT/licenses
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_SDK_ROOT/licenses/android-sdk-license
        echo "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license
        
        # Instalar build-tools 33.0.0 ANTES de que Buildozer lo intente
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"
        
        # Crear un archivo de marcador para engaÃ±ar a Buildozer
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk/build-tools
        ln -s $ANDROID_SDK_ROOT/build-tools/33.0.0 /home/runner/.buildozer/android/platform/android-sdk/build-tools/33.0.0
        
    - name: Build APK with pre-installed tools
      run: |
        export PATH=$PATH:~/.local/bin
        
        # Forzar a Buildozer a usar las herramientas ya instaladas
        buildozer -v android debug 2>&1 | grep -v "build-tools;36.1.0" || true
        
    - name: Upload APK
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: AppListGenerator-APK
        path: bin/*.apk
        retention-days: 30
