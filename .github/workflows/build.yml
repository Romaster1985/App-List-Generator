name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip openjdk-11-jdk git zip unzip expect
        
    - name: Install buildozer
      run: pip install buildozer cython
        
    - name: Force accept ALL Android licenses
      run: |
        # Crear directorio de licencias
        mkdir -p $ANDROID_SDK_ROOT/licenses
        
        # Crear manualmente el archivo de licencia android-sdk-license
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_SDK_ROOT/licenses/android-sdk-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_SDK_ROOT/licenses/android-sdk-license
        
        # Otras licencias importantes
        echo "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license
        
        # Usar expect para aceptar interactivamente las licencias restantes
        expect -c '
set timeout 30
spawn $env(ANDROID_SDK_ROOT)/cmdline-tools/latest/bin/sdkmanager --licenses
expect {
  "Accept? (y/N):" { 
    send "y\r"
    exp_continue 
  }
  eof
}
'
        
    - name: Install Android build tools
      run: |
        # Instalar build-tools 33.0.0 espec√≠ficamente
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "build-tools;33.0.0" "platforms;android-33" "platform-tools"
        
    - name: Build APK
      run: |
        export PATH=$PATH:~/.local/bin
        buildozer android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: AppListGenerator-APK
        path: bin/*.apk
        retention-days: 30
